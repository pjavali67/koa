// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")

}


// model A01Members {
//   member_id                    Int       @id @default(autoincrement())
//   member_email_for_koa         String?   @default("-") @db.VarChar(100)
//   member_mobile_no_for_koa     String?   @default("-") @db.VarChar(20)
//   member_pwd                   String?   @db.VarChar(256)
//   member_name1                 String?   @default("-") @db.VarChar(256)
//   member_name2                 String?   @default("-") @db.VarChar(45)
//   member_koa_no                String?   @default("A-1") @db.VarChar(8)
//   member_address_personal      String?   @default("-") @db.VarChar(256)
//   member_address_office        String?   @default("-") @db.VarChar(256)
//   member_img1                  String?   @default("n") @db.VarChar(1)
//   member_img2                  String?   @default("n") @db.VarChar(1)
//   member_img3                  String?   @default("n") @db.VarChar(1)
//   member_url_code              String?   @default("-") @db.VarChar(45)
//   member_para1                 String?
//   member_para2                 String?
//   member_para3                 String?
//   member_nick_name             String?   @default("-") @db.VarChar(100)
//   member_mobile_no_office1     String?   @default("-") @db.VarChar(20)
//   member_mobile_no_office2     String?   @default("-") @db.VarChar(200)
//   member_ug_passout            String?   @default("-") @db.VarChar(40)
//   member_pg_college            String?   @default("-") @db.VarChar(200)
//   member_pg_passout            String?   @default("-") @db.VarChar(40)
//   member_proposer_name         String?   @default("-") @db.VarChar(256)
//   member_propose_koa_num       String?   @default("-") @db.VarChar(40)
//   member_seconded_name         String?   @default("-") @db.VarChar(256)
//   member_seconded_koa_num      String?   @default("-") @db.VarChar(40)
//   member_qualifications        String?   @db.VarChar(45)
//   member_website               String?   @default("-") @db.VarChar(45)
//   member_location_office       String?   @default("-") @db.VarChar(45)
//   member_whatsapp_office       String?   @default("-") @db.VarChar(45)
//   member_facebook_office       String?   @default("-") @db.VarChar(45)
//   member_socialmedia1_title    String?   @default("Instagram") @db.VarChar(45)
//   member_social_media1_handle  String?   @default("-") @db.VarChar(100)
//   member_socialmedia2_title    String?   @default("X") @db.VarChar(45)
//   member_socialmedia2_handle   String?   @default("-") @db.VarChar(100)
//   member_dob                   DateTime? @db.Date
//   member_doj                   DateTime? @db.Date
//   member_status                String?   @default("applied") @db.VarChar(20)
//   member_role_id               Int?
//   member_createdAt             DateTime? @default(now()) @db.Date
//   member_updateAt              DateTime? @db.Date

//   member_role A02MemberRole? @relation(fields: [member_role_id], references: [member_role_id], onDelete: SetNull, onUpdate: Cascade)

//   @@map("a01_members")
// }
// model A02MemberRole {
//   member_role_id         Int     @id @default(autoincrement())
//   member_role_name       String  @unique @db.VarChar(191)
//   memebr_role_description String?

//   a01_members A01Members[]

//   @@map("a02_member_role")
// }
model Member {
  id                    Int       @id @default(autoincrement())
  email                 String?   @unique @db.VarChar(100)
  mobile                String?   @default("-") @db.VarChar(20)
  password              String?   @db.VarChar(256)
  emailVerified         DateTime?
  name                  String?   @default("-") @db.VarChar(256)
  firstName             String?   @default("-") @db.VarChar(256)
  lastName              String?   @default("-") @db.VarChar(45)
  koa_no                String?   @default("A-1") @db.VarChar(8)
  address_personal      String?   @default("-") @db.VarChar(256)
  address_office        String?   @default("-") @db.VarChar(256)
  img1                  String?   @default("n") @db.VarChar(1)
  img2                  String?   @default("n") @db.VarChar(1)
  img3                  String?   @default("n") @db.VarChar(1)
  url_code              String?   @default("-") @db.VarChar(45)
  para1                 String?
  para2                 String?
  para3                 String?
  nick_name             String?   @default("-") @db.VarChar(100)
  mobile_no_office1     String?   @default("-") @db.VarChar(20)
  mobile_no_office2     String?   @default("-") @db.VarChar(200)
  ug_college            String?   @default("-") @db.VarChar(200)
  ug_passout            String?   @default("-") @db.VarChar(40)
  pg_college            String?   @default("-") @db.VarChar(200)
  pg_passout            String?   @default("-") @db.VarChar(40)
  proposer_name         String?   @default("-") @db.VarChar(256)
  propose_koa_num       String?   @default("-") @db.VarChar(40)
  seconded_name         String?   @default("-") @db.VarChar(256)
  seconded_koa_num      String?   @default("-") @db.VarChar(40)
  qualifications        String?   @db.VarChar(45)
  website               String?   @default("-") @db.VarChar(45)
  location_office       String?   @default("-") @db.VarChar(45)
  whatsapp_office       String?   @default("-") @db.VarChar(45)
  facebook_office       String?   @default("-") @db.VarChar(45)
  socialmedia1_title    String?   @default("Instagram") @db.VarChar(45)
  social_media1_handle  String?   @default("-") @db.VarChar(100)
  socialmedia2_title    String?   @default("X") @db.VarChar(45)
  socialmedia2_handle   String?   @default("-") @db.VarChar(100)
  dob                   DateTime? @db.Date
  doj                   DateTime? @db.Date
  status                String?   @default("applied") @db.VarChar(20)
  type                  String?   @default("lifeMember") @db.VarChar(20)
  role_id               Int?
  createdAt             DateTime? @default(now()) @map("created_at")
  updatedAt             DateTime? @default(now()) @map("updated_at")
  transationId          String?
  blog                  Blog[]
  role                  MemberRole? @relation(fields: [role_id], references: [role_id], onDelete: SetNull, onUpdate: Cascade)

  @@map("member")
}

model MemberRole {
  role_id          Int       @id @default(autoincrement())
  role_name        String    @unique @db.VarChar(191)
  role_description String?

  member          Member[]

  @@map("member_role")
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
  @@map("verification_tokens")
}

model PasswordResetToken {
  id        Int      @id @default(autoincrement())
  email     String
  token     String
  expires   DateTime
  createdAt DateTime @default(now()) @map("created_at")

  @@unique([email, token])
  @@map("password_reset_tokens")
}

model HeroCarousel {
  id          Int     @id @default(autoincrement())
  title       String
  description String
  image       String
  ctaText     String
  ctaLink     String
  isActive    Boolean
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model SmallCarousel {
  id          Int     @id @default(autoincrement())
  title       String
  description String
  image       String
  ctaText     String
  ctaLink     String
  isActive    Boolean
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Blog {
  id        Int      @id @default(autoincrement())
  title     String
  author    String
  date      DateTime
  image     String?
  content   String?

  MemberId    Int
  Member      Member     @relation(fields: [MemberId], references: [id])

  reviews   Review[]
  comments  Comment[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Review {
  id        Int      @id @default(autoincrement())
  content   String
  rating    Int?
  blogId    Int
  blog      Blog     @relation(fields: [blogId], references: [id])
  createdAt DateTime @default(now())
}

model Comment {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  comment   String
  blogId    Int
  blog      Blog     @relation(fields: [blogId], references: [id])
  createdAt DateTime @default(now())
}

model News {
  id          Int      @id @default(autoincrement())
  title       String
  author      String
  date        DateTime
  image       String?
  description String

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}